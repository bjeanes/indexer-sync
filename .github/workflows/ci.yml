on:
  push:
    branches: [master]

jobs:
  # TODO: skip if ${{ github.sha }} can be `git describe`d as an exact version
  #       tag (we'll release that separately)
  prerelease:
    name: Create a pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Extract latest changelog entry
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v1.1.0

      # Deleting the release and tag to work around some downsides of the
      # meeDamian/github-release approach:
      #
      # 1. Tag is left pointing to the original release
      # 2. Release is updated but its timestamp will be the time of original release
      #
      # Simply deleting the tag (e.g. `git push --delete origin unstable`) will
      # work from a public-facing standpoint, but it leaves behind a lot of
      # draft releases for the releases which were associated with the tag at
      # the time it was deleted.
      - name: Delete `unstable` tag and associated GH Release
        uses: bjeanes/delete-tag-and-release@fix-release-deletion
        with:
          delete_release: true
          tag_name: unstable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upserts the pre-release
      - name: Create GH Release and `unstable` tag for current commit
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allow_override: true
          prerelease: true
          tag: unstable
          commitish: ${{ github.sha }}
          name: "Unstable - built from current master"
          body: ${{ steps.changelog_reader.outputs.log_entry }}
